{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"jsx","jsx","jsx","jsx","jsx"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue","filename":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue","passPerPreset":false,"envName":"development","cwd":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui","root":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$0","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$3","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"babel-plugin-transform-vue-jsx","visitor":{"_exploded":{},"_verified":{},"JSXElement":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar version = require('element-ui/package.json').version; // element-ui version from node_modules\n\n\nvar ORIGINAL_THEME = '#409EFF'; // default color\n\nmodule.exportDefault({\n  data: function () {\n    return {\n      chalk: '',\n      // content of theme-chalk css\n      theme: ''\n    };\n  },\n  computed: {\n    defaultTheme: function () {\n      return this.$store.state.settings.theme;\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function (val, oldVal) {\n        this.theme = val;\n      },\n      immediate: true\n    },\n    theme: function _callee(val) {\n      var _this = this;\n\n      var oldVal, themeCluster, originalCluster, $message, getHandler, url, chalkHandler, styles;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              oldVal = this.chalk ? this.theme : ORIGINAL_THEME;\n\n              if (!(typeof val !== 'string')) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              themeCluster = this.getThemeCluster(val.replace('#', ''));\n              originalCluster = this.getThemeCluster(oldVal.replace('#', ''));\n              console.log(themeCluster, originalCluster);\n              $message = this.$message({\n                message: '  Compiling the theme',\n                customClass: 'theme-message',\n                type: 'success',\n                duration: 0,\n                iconClass: 'el-icon-loading'\n              });\n\n              getHandler = function (variable, id) {\n                return function () {\n                  var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace('#', ''));\n\n                  var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n                  var styleTag = document.getElementById(id);\n\n                  if (!styleTag) {\n                    styleTag = document.createElement('style');\n                    styleTag.setAttribute('id', id);\n                    document.head.appendChild(styleTag);\n                  }\n\n                  styleTag.innerText = newStyle;\n                };\n              };\n\n              if (this.chalk) {\n                _context.next = 12;\n                break;\n              }\n\n              url = \"https://unpkg.com/element-ui@\" + version + \"/lib/theme-chalk/index.css\";\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(this.getCSSString(url, 'chalk'));\n\n            case 12:\n              chalkHandler = getHandler('chalk', 'chalk-style');\n              chalkHandler();\n              styles = [].slice.call(document.querySelectorAll('style')).filter(function (style) {\n                var text = style.innerText;\n                return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text);\n              });\n              styles.forEach(function (style) {\n                var innerText = style.innerText;\n                if (typeof innerText !== 'string') return;\n                style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n              });\n              this.$emit('change', val);\n              $message.close();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  },\n  methods: {\n    updateStyle: function (style, oldCluster, newCluster) {\n      var newStyle = style;\n      oldCluster.forEach(function (color, index) {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index]);\n      });\n      return newStyle;\n    },\n    getCSSString: function (url, variable) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '');\n            resolve();\n          }\n        };\n\n        xhr.open('GET', url);\n        xhr.send();\n      });\n    },\n    getThemeCluster: function (theme) {\n      var tintColor = function (color, tint) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n\n        if (tint === 0) {\n          // when primary color is in its rgb space\n          return [red, green, blue].join(',');\n        } else {\n          red += Math.round(tint * (255 - red));\n          green += Math.round(tint * (255 - green));\n          blue += Math.round(tint * (255 - blue));\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\" + red + green + blue;\n        }\n      };\n\n      var shadeColor = function (color, shade) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n        red = Math.round((1 - shade) * red);\n        green = Math.round((1 - shade) * green);\n        blue = Math.round((1 - shade) * blue);\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n        return \"#\" + red + green + blue;\n      };\n\n      var clusters = [theme];\n\n      for (var i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n      }\n\n      clusters.push(shadeColor(theme, 0.1));\n      return clusters;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/components/ThemePicker/index.vue"],"names":["_regeneratorRuntime","module","link","default","v","version","require","ORIGINAL_THEME","exportDefault","data","chalk","theme","computed","defaultTheme","$store","state","settings","watch","handler","val","oldVal","immediate","themeCluster","getThemeCluster","replace","originalCluster","console","log","$message","message","customClass","type","duration","iconClass","getHandler","variable","id","newStyle","updateStyle","styleTag","document","getElementById","createElement","setAttribute","head","appendChild","innerText","url","getCSSString","chalkHandler","styles","slice","call","querySelectorAll","filter","style","text","RegExp","test","forEach","$emit","close","methods","oldCluster","newCluster","color","index","Promise","resolve","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","i","push","Number","toFixed"],"mappings":"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","sourcesContent":["\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data() {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ''\n    }\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.settings.theme\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n      console.log(themeCluster, originalCluster)\n\n      const $message = this.$message({\n        message: '  Compiling the theme',\n        customClass: 'theme-message',\n        type: 'success',\n        duration: 0,\n        iconClass: 'el-icon-loading'\n      })\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        await this.getCSSString(url, 'chalk')\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      chalkHandler()\n\n      const styles = [].slice.call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n      })\n\n      this.$emit('change', val)\n\n      $message.close()\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n            resolve()\n          }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n"]},"sourceType":"module","hash":"1d4fab2ef596425b3751d940250010998332e649"}
