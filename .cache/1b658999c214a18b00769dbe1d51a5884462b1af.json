{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"jsx","jsx","jsx","jsx","jsx"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue","filename":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue","passPerPreset":false,"envName":"development","cwd":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui","root":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$0","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/node_modules/@vue/babel-preset-jsx/dist/plugin.cjs.js$3","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"babel-plugin-transform-vue-jsx","visitor":{"_exploded":{},"_verified":{},"JSXElement":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue"}},"code":"var _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar ScrollPane;\nmodule.link(\"./ScrollPane\", {\n  \"default\": function (v) {\n    ScrollPane = v;\n  }\n}, 0);\nvar path;\nmodule.link(\"path\", {\n  \"default\": function (v) {\n    path = v;\n  }\n}, 1);\nmodule.exportDefault({\n  components: {\n    ScrollPane: ScrollPane\n  },\n  data: function () {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  computed: {\n    visitedViews: function () {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes: function () {\n      return this.$store.state.permission.routes;\n    }\n  },\n  watch: {\n    $route: function () {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible: function (value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function () {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive: function (route) {\n      return route.path === this.$route.path;\n    },\n    isAffix: function (tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    filterAffixTags: function (routes) {\n      var _this = this;\n\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var tags = [];\n      routes.forEach(function (route) {\n        if (route.meta && route.meta.affix) {\n          var tagPath = path.resolve(basePath, route.path);\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: _objectSpread({}, route.meta)\n          });\n        }\n\n        if (route.children) {\n          var tempTags = _this.filterAffixTags(route.children, route.path);\n\n          if (tempTags.length >= 1) {\n            tags = [].concat(_toConsumableArray(tags), _toConsumableArray(tempTags));\n          }\n        }\n      });\n      return tags;\n    },\n    initTags: function () {\n      var affixTags = this.affixTags = this.filterAffixTags(this.routes);\n\n      for (var _iterator = affixTags, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _tag = _ref;\n\n        // Must have tag name\n        if (_tag.name) {\n          this.$store.dispatch('tagsView/addVisitedView', _tag);\n        }\n      }\n    },\n    addTags: function () {\n      var name = this.$route.name;\n\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n      }\n\n      return false;\n    },\n    moveToCurrentTag: function () {\n      var _this2 = this;\n\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        for (var _iterator2 = tags, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var _tag2 = _ref2;\n\n          if (_tag2.to.path === _this2.$route.path) {\n            _this2.$refs.scrollPane.moveToTarget(_tag2); // when query is different then update\n\n\n            if (_tag2.to.fullPath !== _this2.$route.fullPath) {\n              _this2.$store.dispatch('tagsView/updateVisitedView', _this2.$route);\n            }\n\n            break;\n          }\n        }\n      });\n    },\n    refreshSelectedTag: function (view) {\n      var _this3 = this;\n\n      this.$store.dispatch('tagsView/delCachedView', view).then(function () {\n        var fullPath = view.fullPath;\n\n        _this3.$nextTick(function () {\n          _this3.$router.replace({\n            path: '/redirect' + fullPath\n          });\n        });\n      });\n    },\n    closeSelectedTag: function (view) {\n      var _this4 = this;\n\n      this.$store.dispatch('tagsView/delView', view).then(function (_ref3) {\n        var visitedViews = _ref3.visitedViews;\n\n        if (_this4.isActive(view)) {\n          _this4.toLastView(visitedViews, view);\n        }\n      });\n    },\n    closeOthersTags: function () {\n      var _this5 = this;\n\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(function () {\n        _this5.moveToCurrentTag();\n      });\n    },\n    closeAllTags: function (view) {\n      var _this6 = this;\n\n      this.$store.dispatch('tagsView/delAllViews').then(function (_ref4) {\n        var visitedViews = _ref4.visitedViews;\n\n        if (_this6.affixTags.some(function (tag) {\n          return tag.path === view.path;\n        })) {\n          return;\n        }\n\n        _this6.toLastView(visitedViews, view);\n      });\n    },\n    toLastView: function (visitedViews, view) {\n      var latestView = visitedViews.slice(-1)[0];\n\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu: function (tag, e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n\n      var offsetWidth = this.$el.offsetWidth; // container width\n\n      var maxLeft = offsetWidth - menuMinWidth; // left boundary\n\n      var left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu: function () {\n      this.visible = false;\n    },\n    handleScroll: function () {\n      this.closeMenu();\n    }\n  }\n});","map":{"version":3,"sources":["/Users/lourd/Desktop/bpmn/meteor-vue-element-ui/imports/ui/layout/components/TagsView/index.vue"],"names":["_toConsumableArray","module","link","default","v","_objectSpread","ScrollPane","path","exportDefault","components","data","visible","top","left","selectedTag","affixTags","computed","visitedViews","$store","state","tagsView","routes","permission","watch","$route","addTags","moveToCurrentTag","value","document","body","addEventListener","closeMenu","removeEventListener","mounted","initTags","methods","isActive","route","isAffix","tag","meta","affix","filterAffixTags","basePath","tags","forEach","tagPath","resolve","push","fullPath","name","children","tempTags","length","dispatch","$refs","$nextTick","to","scrollPane","moveToTarget","refreshSelectedTag","view","then","$router","replace","closeSelectedTag","toLastView","closeOthersTags","closeAllTags","some","latestView","slice","openMenu","e","menuMinWidth","offsetLeft","$el","getBoundingClientRect","offsetWidth","maxLeft","clientX","clientY","handleScroll"],"mappings":"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","sourcesContent":["\nimport ScrollPane from './ScrollPane'\nimport path from 'path'\n\nexport default {\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    }\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews\n    },\n    routes() {\n      return this.$store.state.permission.routes\n    }\n  },\n  watch: {\n    $route() {\n      this.addTags()\n      this.moveToCurrentTag()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  },\n  mounted() {\n    this.initTags()\n    this.addTags()\n  },\n  methods: {\n    isActive(route) {\n      return route.path === this.$route.path\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix\n    },\n    filterAffixTags(routes, basePath = '/') {\n      let tags = []\n      routes.forEach(route => {\n        if (route.meta && route.meta.affix) {\n          const tagPath = path.resolve(basePath, route.path)\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: { ...route.meta }\n          })\n        }\n        if (route.children) {\n          const tempTags = this.filterAffixTags(route.children, route.path)\n          if (tempTags.length >= 1) {\n            tags = [...tags, ...tempTags]\n          }\n        }\n      })\n      return tags\n    },\n    initTags() {\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\n      for (const tag of affixTags) {\n        // Must have tag name\n        if (tag.name) {\n          this.$store.dispatch('tagsView/addVisitedView', tag)\n        }\n      }\n    },\n    addTags() {\n      const { name } = this.$route\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route)\n      }\n      return false\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag)\n            // when query is different then update\n            if (tag.to.fullPath !== this.$route.fullPath) {\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\n            }\n            break\n          }\n        }\n      })\n    },\n    refreshSelectedTag(view) {\n      this.$store.dispatch('tagsView/delCachedView', view).then(() => {\n        const { fullPath } = view\n        this.$nextTick(() => {\n          this.$router.replace({\n            path: '/redirect' + fullPath\n          })\n        })\n      })\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch('tagsView/delView', view).then(({ visitedViews }) => {\n        if (this.isActive(view)) {\n          this.toLastView(visitedViews, view)\n        }\n      })\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag)\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(() => {\n        this.moveToCurrentTag()\n      })\n    },\n    closeAllTags(view) {\n      this.$store.dispatch('tagsView/delAllViews').then(({ visitedViews }) => {\n        if (this.affixTags.some(tag => tag.path === view.path)) {\n          return\n        }\n        this.toLastView(visitedViews, view)\n      })\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0]\n      if (latestView) {\n        this.$router.push(latestView.fullPath)\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({ path: '/redirect' + view.fullPath })\n        } else {\n          this.$router.push('/')\n        }\n      }\n    },\n    openMenu(tag, e) {\n      const menuMinWidth = 105\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n      const offsetWidth = this.$el.offsetWidth // container width\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      this.top = e.clientY\n      this.visible = true\n      this.selectedTag = tag\n    },\n    closeMenu() {\n      this.visible = false\n    },\n    handleScroll() {\n      this.closeMenu()\n    }\n  }\n}\n"]},"sourceType":"module","hash":"1b658999c214a18b00769dbe1d51a5884462b1af"}
